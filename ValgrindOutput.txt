==19434== Memcheck, a memory error detector
==19434== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==19434== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==19434== Command: ./build/app/main-app
==19434== 
vex amd64->IR: unhandled instruction bytes: 0xF 0xC7 0xF0 0x89 0x6 0xF 0x42 0xC1
vex amd64->IR:   REX=0 REX.W=0 REX.R=0 REX.X=0 REX.B=0
vex amd64->IR:   VEX=0 VEX.L=0 VEX.nVVVV=0x0 ESC=0F
vex amd64->IR:   PFX.66=0 PFX.F2=0 PFX.F3=0
==19434== valgrind: Unrecognised instruction at address 0x4ef1b15.
==19434==    at 0x4EF1B15: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==19434==    by 0x4EF1CB1: std::random_device::_M_getval() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==19434==    by 0x40DEF3: std::random_device::operator()() (random.h:1612)
==19434==    by 0x40CECF: Grid::Grid() (grid.cpp:28)
==19434==    by 0x40BF96: main (main.cpp:15)
==19434== Your program just tried to execute an instruction that Valgrind
==19434== did not recognise.  There are two possible reasons for this.
==19434== 1. Your program has a bug and erroneously jumped to a non-code
==19434==    location.  If you are running Memcheck and you just saw a
==19434==    warning about a bad jump, it's probably your program's fault.
==19434== 2. The instruction is legitimate but Valgrind doesn't handle it,
==19434==    i.e. it's Valgrind's fault.  If you think this is the case or
==19434==    you are not sure, please let us know and we'll try to fix it.
==19434== Either way, Valgrind will now raise a SIGILL signal which will
==19434== probably kill your program.
==19434== 
==19434== Process terminating with default action of signal 4 (SIGILL)
==19434==  Illegal opcode at address 0x4EF1B15
==19434==    at 0x4EF1B15: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==19434==    by 0x4EF1CB1: std::random_device::_M_getval() (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==19434==    by 0x40DEF3: std::random_device::operator()() (random.h:1612)
==19434==    by 0x40CECF: Grid::Grid() (grid.cpp:28)
==19434==    by 0x40BF96: main (main.cpp:15)
==19434== 
==19434== HEAP SUMMARY:
==19434==     in use at exit: 93,184 bytes in 2 blocks
==19434==   total heap usage: 11 allocs, 9 frees, 113,624 bytes allocated
==19434== 
==19434== LEAK SUMMARY:
==19434==    definitely lost: 0 bytes in 0 blocks
==19434==    indirectly lost: 0 bytes in 0 blocks
==19434==      possibly lost: 0 bytes in 0 blocks
==19434==    still reachable: 93,184 bytes in 2 blocks
==19434==         suppressed: 0 bytes in 0 blocks
==19434== Rerun with --leak-check=full to see details of leaked memory
==19434== 
==19434== For counts of detected and suppressed errors, rerun with: -v
==19434== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
Illegal instruction (core dumped)
